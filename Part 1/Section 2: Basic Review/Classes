class Rectangle:
    def __init__(self, width, height):   # initializer method, it goes right after the new object creation
        self._width = width    # setting the properties. It means that self.xxxx is defining the attribute
        self._height = height    # the _ indicates that is a private variable. Advisible to not change it

    def get_width(self):
        return self._width

    def set_width(self, width):    # Preventing the width to be less or equal to 0
        if width <= 0:
            raise ValueError('Width must be positive.')
        else:
            self._width = width

    def area(self):
        return self._width * self._height

    def perimeter(self):
        return 2 * (self._width + self._height)

    def __str__(self):    # this method allows us to call the object inside an str() to get the string representation
        return 'Rectangle: width = {0}, height = {1}'.format(self._width, self._height)

    def __repr__(self):    # does the same as __str__, but without the need to call it inside an str() function
        return 'Rectangle({0}, {1})'.format(self._width, self._height)

    def __eq__(self, other):    # this methos is used to compare two object that has the same value
        if isinstance(other, Rectangle):    # used to compare the objects to another type of objects
            return self._width == other._width and self._height == other._height
        else:
            return False

    def __lt__(self, other):    # similar to __eq__ but it compares if one objct is less than another
        if isinstance(self, Rectangle):
            return self.area() < other.area()
        else:
            return NotImplemented


r1 = Rectangle(-10, 20)
r2 = Rectangle(100, 200)

print(r1 is not r2)
print(r1 == r2)
print(r1 == 100)
print(r1 < r2)


# All statements in a class that is writen as __xxxx__ is called a instance method. Methods is called 'callables'
# The first argument of a method is the object itself, it called 'self' as a good practice
# After the first argument, we name the attributes of the object
